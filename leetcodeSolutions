// Given an array of integers nums and an integer target, 
// return indices of the two numbers such that they add up to target.
// You may assume that each input would have exactly one solution, 
// and you may not use the same element twice.
// You can return the answer in any order.

//Solution

import java.util.Arrays;
import java.util.HashMap;

class Solution {
    public int[] twoSum(int[] nums, int target) {
     HashMap<String, Integer> number = new HashMap<String, Integer>();
        
        for (int i = 0; i < nums.length; i++) {
            number.put(Integer.toString(nums[i]), i);
        }
        
        for (int i = 0, place = i; i < nums.length; i++) {
            int distance = target - nums[i];
            
            if (number.containsKey(Integer.toString(distance))) {
                place = number.get(Integer.toString(distance));
                if (i != place) {
                    return new int[]{i, place};
                }
            }
        }
        return new int[]{0,0};
    }
}